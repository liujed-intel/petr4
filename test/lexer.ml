# 15 "lexer.mll"
 
open Lexing
open Parser

exception Error of string

let current_line  = ref 1

type lexer = Keyword | Packet_data
let lexer = ref Keyword

let newline () =
  incr current_line

# 17 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\255\255\000\000\226\255\001\000\005\000\229\255\003\000\001\000\
    \002\000\007\000\000\000\000\000\001\000\000\000\008\000\241\255\
    \002\000\003\000\004\000\005\000\249\255\250\255\251\255\252\255\
    \253\255\254\255\255\255\247\255\246\255\244\255\242\255\001\000\
    \006\000\240\255\239\255\001\000\006\000\003\000\238\255\012\000\
    \023\000\016\000\000\000\025\000\014\000\009\000\017\000\012\000\
    \028\000\016\000\237\255\019\000\031\000\034\000\018\000\236\255\
    \001\000\023\000\039\000\038\000\031\000\038\000\024\000\235\255\
    \042\000\035\000\042\000\028\000\030\000\233\255\037\000\036\000\
    \030\000\048\000\232\255\034\000\051\000\051\000\051\000\057\000\
    \038\000\048\000\041\000\231\255\053\000\043\000\230\255\002\000\
    \151\000\006\000\006\000\253\255\174\000\212\000";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\027\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \012\000\010\000\255\255\007\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\021\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\028\000\
    \255\255\004\000\003\000\255\255\001\000\000\000";
  Lexing.lex_default =
   "\000\000\255\255\000\000\003\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\003\000\
    \255\255\255\255\255\255\000\000\255\255\255\255";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\004\000\005\000\087\000\087\000\004\000\004\000\089\000\
    \090\000\000\000\004\000\089\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\018\000\000\000\003\000\000\000\004\000\089\000\000\000\
    \021\000\020\000\000\000\000\000\025\000\000\000\024\000\015\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\026\000\000\000\017\000\019\000\016\000\030\000\
    \029\000\028\000\027\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\023\000\000\000\022\000\000\000\043\000\
    \057\000\014\000\013\000\012\000\084\000\011\000\075\000\070\000\
    \064\000\039\000\033\000\037\000\032\000\034\000\010\000\056\000\
    \009\000\040\000\008\000\007\000\031\000\036\000\038\000\006\000\
    \051\000\035\000\041\000\042\000\044\000\045\000\046\000\047\000\
    \048\000\049\000\050\000\052\000\053\000\054\000\055\000\058\000\
    \059\000\060\000\061\000\062\000\063\000\065\000\066\000\067\000\
    \068\000\069\000\071\000\072\000\073\000\074\000\076\000\077\000\
    \078\000\079\000\080\000\081\000\082\000\083\000\085\000\086\000\
    \089\000\090\000\000\000\000\000\089\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\089\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\091\000\000\000\000\000\000\000\000\000\000\000\093\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\093\000\093\000\
    \093\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\000\000\000\000\000\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\000\000\000\000\
    \002\000\255\255\255\255\000\000\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\000\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\092\000\092\000\092\000\
    \092\000\092\000\092\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\001\000\001\000\003\000\087\000\001\000\004\000\089\000\
    \090\000\255\255\004\000\089\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \001\000\001\000\255\255\001\000\255\255\004\000\089\000\255\255\
    \001\000\001\000\255\255\255\255\001\000\255\255\001\000\001\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\001\000\255\255\001\000\001\000\001\000\016\000\
    \017\000\018\000\019\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\001\000\255\255\001\000\255\255\042\000\
    \056\000\001\000\001\000\001\000\006\000\001\000\007\000\008\000\
    \009\000\012\000\032\000\036\000\014\000\031\000\001\000\010\000\
    \001\000\039\000\001\000\001\000\014\000\035\000\037\000\001\000\
    \011\000\013\000\040\000\041\000\043\000\044\000\045\000\046\000\
    \047\000\048\000\049\000\051\000\052\000\053\000\054\000\057\000\
    \058\000\059\000\060\000\061\000\062\000\064\000\065\000\066\000\
    \067\000\068\000\070\000\071\000\072\000\073\000\075\000\076\000\
    \077\000\078\000\079\000\080\000\081\000\082\000\084\000\085\000\
    \088\000\088\000\255\255\255\255\088\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\088\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\088\000\255\255\255\255\255\255\255\255\255\255\088\000\
    \088\000\088\000\088\000\088\000\088\000\088\000\088\000\088\000\
    \088\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \088\000\088\000\088\000\088\000\088\000\088\000\092\000\092\000\
    \092\000\092\000\092\000\092\000\092\000\092\000\092\000\092\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\092\000\
    \092\000\092\000\092\000\092\000\092\000\255\255\255\255\255\255\
    \088\000\088\000\088\000\088\000\088\000\088\000\255\255\255\255\
    \001\000\003\000\087\000\255\255\093\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\093\000\093\000\093\000\255\255\092\000\
    \092\000\092\000\092\000\092\000\092\000\093\000\093\000\093\000\
    \093\000\093\000\093\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\093\000\093\000\093\000\
    \093\000\093\000\093\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 54 "lexer.mll"
    ( match !lexer with
      | Keyword -> keyword lexbuf
      | Packet_data -> packet_data lexbuf )
# 201 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and keyword lexbuf =
   __ocaml_lex_keyword_rec lexbuf 1
and __ocaml_lex_keyword_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 60 "lexer.mll"
      ( COLON )
# 213 "lexer.ml"

  | 1 ->
# 62 "lexer.mll"
      ( COMMA )
# 218 "lexer.ml"

  | 2 ->
# 64 "lexer.mll"
      ( DOT )
# 223 "lexer.ml"

  | 3 ->
# 66 "lexer.mll"
      ( LBRACKET )
# 228 "lexer.ml"

  | 4 ->
# 68 "lexer.mll"
      ( RBRACKET )
# 233 "lexer.ml"

  | 5 ->
# 70 "lexer.mll"
      ( LPAREN )
# 238 "lexer.ml"

  | 6 ->
# 72 "lexer.mll"
      ( RPAREN )
# 243 "lexer.ml"

  | 7 ->
# 74 "lexer.mll"
      ( EQUAL )
# 248 "lexer.ml"

  | 8 ->
# 76 "lexer.mll"
      ( EQEQ )
# 253 "lexer.ml"

  | 9 ->
# 78 "lexer.mll"
      ( NEQ )
# 258 "lexer.ml"

  | 10 ->
# 80 "lexer.mll"
      ( LE )
# 263 "lexer.ml"

  | 11 ->
# 82 "lexer.mll"
      ( LEQ )
# 268 "lexer.ml"

  | 12 ->
# 84 "lexer.mll"
      ( GT )
# 273 "lexer.ml"

  | 13 ->
# 86 "lexer.mll"
      ( GEQ )
# 278 "lexer.ml"

  | 14 ->
# 88 "lexer.mll"
      ( SLASH )
# 283 "lexer.ml"

  | 15 ->
# 90 "lexer.mll"
    ( ADD )
# 288 "lexer.ml"

  | 16 ->
# 92 "lexer.mll"
    ( ALL )
# 293 "lexer.ml"

  | 17 ->
# 94 "lexer.mll"
    ( BYTES )
# 298 "lexer.ml"

  | 18 ->
# 96 "lexer.mll"
    ( CHECK_COUNTER )
# 303 "lexer.ml"

  | 19 ->
# 98 "lexer.mll"
    ( lexer:= Packet_data; EXPECT)
# 308 "lexer.ml"

  | 20 ->
# 100 "lexer.mll"
    ( NO_PACKET )
# 313 "lexer.ml"

  | 21 ->
# 102 "lexer.mll"
    ( PACKET )
# 318 "lexer.ml"

  | 22 ->
# 104 "lexer.mll"
    ( PACKETS )
# 323 "lexer.ml"

  | 23 ->
# 106 "lexer.mll"
    ( REMOVE )
# 328 "lexer.ml"

  | 24 ->
# 108 "lexer.mll"
    ( SETDEFAULT )
# 333 "lexer.ml"

  | 25 ->
# 110 "lexer.mll"
    ( WAIT )
# 338 "lexer.ml"

  | 26 ->
# 112 "lexer.mll"
    ( newline (); keyword lexbuf )
# 343 "lexer.ml"

  | 27 ->
# 114 "lexer.mll"
    ( keyword lexbuf )
# 348 "lexer.ml"

  | 28 ->
# 116 "lexer.mll"
    ( newline(); keyword lexbuf )
# 353 "lexer.ml"

  | 29 ->
# 118 "lexer.mll"
    ( END )
# 358 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_keyword_rec lexbuf __ocaml_lex_state

and packet_data lexbuf =
   __ocaml_lex_packet_data_rec lexbuf 88
and __ocaml_lex_packet_data_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 122 "lexer.mll"
    ( DATA_DEC(lexeme lexbuf) )
# 370 "lexer.ml"

  | 1 ->
# 124 "lexer.mll"
    ( DATA_HEX(lexeme lexbuf) )
# 375 "lexer.ml"

  | 2 ->
# 126 "lexer.mll"
    ( DATA_TERN )
# 380 "lexer.ml"

  | 3 ->
# 128 "lexer.mll"
    ( lexer:= Keyword; keyword lexbuf )
# 385 "lexer.ml"

  | 4 ->
# 130 "lexer.mll"
    ( packet_data lexbuf )
# 390 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_packet_data_rec lexbuf __ocaml_lex_state

;;

# 132 "lexer.mll"
 

# 400 "lexer.ml"
